{"version":3,"file":"js/859.a49fb029.js","mappings":"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","sources":["webpack://country-cards-app/./node_modules/ol/node_modules/rbush/rbush.min.js","webpack://country-cards-app/./src/views/CountryDetail.vue","webpack://country-cards-app/./src/components/MapComponent.vue","webpack://country-cards-app/./node_modules/ol/events/Event.js","webpack://country-cards-app/./node_modules/ol/ObjectEventType.js","webpack://country-cards-app/./node_modules/ol/Disposable.js","webpack://country-cards-app/./node_modules/ol/array.js","webpack://country-cards-app/./node_modules/ol/functions.js","webpack://country-cards-app/./node_modules/ol/obj.js","webpack://country-cards-app/./node_modules/ol/events/Target.js","webpack://country-cards-app/./node_modules/ol/events/EventType.js","webpack://country-cards-app/./node_modules/ol/events.js","webpack://country-cards-app/./node_modules/ol/Observable.js","webpack://country-cards-app/./node_modules/ol/util.js","webpack://country-cards-app/./node_modules/ol/Object.js","webpack://country-cards-app/./node_modules/ol/CollectionEventType.js","webpack://country-cards-app/./node_modules/ol/Collection.js","webpack://country-cards-app/./node_modules/ol/layer/Property.js","webpack://country-cards-app/./node_modules/ol/asserts.js","webpack://country-cards-app/./node_modules/ol/math.js","webpack://country-cards-app/./node_modules/ol/layer/Base.js","webpack://country-cards-app/./node_modules/ol/render/EventType.js","webpack://country-cards-app/./node_modules/ol/ViewHint.js","webpack://country-cards-app/./node_modules/ol/ViewProperty.js","webpack://country-cards-app/./node_modules/ol/tilegrid/common.js","webpack://country-cards-app/./node_modules/ol/proj/Units.js","webpack://country-cards-app/./node_modules/ol/proj/Projection.js","webpack://country-cards-app/./node_modules/ol/proj/epsg3857.js","webpack://country-cards-app/./node_modules/ol/proj/epsg4326.js","webpack://country-cards-app/./node_modules/ol/proj/projections.js","webpack://country-cards-app/./node_modules/ol/proj/transforms.js","webpack://country-cards-app/./node_modules/ol/extent/Relationship.js","webpack://country-cards-app/./node_modules/ol/extent.js","webpack://country-cards-app/./node_modules/ol/coordinate.js","webpack://country-cards-app/./node_modules/ol/sphere.js","webpack://country-cards-app/./node_modules/ol/console.js","webpack://country-cards-app/./node_modules/ol/proj.js","webpack://country-cards-app/./node_modules/ol/centerconstraint.js","webpack://country-cards-app/./node_modules/ol/resolutionconstraint.js","webpack://country-cards-app/./node_modules/ol/rotationconstraint.js","webpack://country-cards-app/./node_modules/ol/easing.js","webpack://country-cards-app/./node_modules/ol/transform.js","webpack://country-cards-app/./node_modules/ol/geom/flat/transform.js","webpack://country-cards-app/./node_modules/ol/geom/Geometry.js","webpack://country-cards-app/./node_modules/ol/geom/SimpleGeometry.js","webpack://country-cards-app/./node_modules/ol/geom/flat/closest.js","webpack://country-cards-app/./node_modules/ol/geom/flat/deflate.js","webpack://country-cards-app/./node_modules/ol/geom/flat/simplify.js","webpack://country-cards-app/./node_modules/ol/geom/flat/inflate.js","webpack://country-cards-app/./node_modules/ol/geom/flat/area.js","webpack://country-cards-app/./node_modules/ol/geom/LinearRing.js","webpack://country-cards-app/./node_modules/ol/geom/Point.js","webpack://country-cards-app/./node_modules/ol/geom/flat/contains.js","webpack://country-cards-app/./node_modules/ol/geom/flat/interiorpoint.js","webpack://country-cards-app/./node_modules/ol/geom/flat/segments.js","webpack://country-cards-app/./node_modules/ol/geom/flat/intersectsextent.js","webpack://country-cards-app/./node_modules/ol/geom/flat/reverse.js","webpack://country-cards-app/./node_modules/ol/geom/flat/orient.js","webpack://country-cards-app/./node_modules/ol/geom/Polygon.js","webpack://country-cards-app/./node_modules/ol/View.js","webpack://country-cards-app/./node_modules/ol/layer/Layer.js","webpack://country-cards-app/./node_modules/ol/ImageState.js","webpack://country-cards-app/./node_modules/ol/size.js","webpack://country-cards-app/./node_modules/ol/style/Image.js","webpack://country-cards-app/./node_modules/color-space/rgb.js","webpack://country-cards-app/./node_modules/color-space/xyz.js","webpack://country-cards-app/./node_modules/color-space/luv.js","webpack://country-cards-app/./node_modules/color-space/lchuv.js","webpack://country-cards-app/./node_modules/color-parse/node_modules/color-name/index.js","webpack://country-cards-app/./node_modules/color-parse/index.js","webpack://country-cards-app/./node_modules/color-space/hsl.js","webpack://country-cards-app/./node_modules/color-rgba/index.js","webpack://country-cards-app/./node_modules/ol/color.js","webpack://country-cards-app/./node_modules/ol/has.js","webpack://country-cards-app/./node_modules/ol/dom.js","webpack://country-cards-app/./node_modules/ol/Image.js","webpack://country-cards-app/./node_modules/ol/style/IconImageCache.js","webpack://country-cards-app/./node_modules/ol/style/IconImage.js","webpack://country-cards-app/./node_modules/ol/colorlike.js","webpack://country-cards-app/./node_modules/ol/css.js","webpack://country-cards-app/./node_modules/ol/render/canvas.js","webpack://country-cards-app/./node_modules/ol/style/RegularShape.js","webpack://country-cards-app/./node_modules/ol/style/Circle.js","webpack://country-cards-app/./node_modules/ol/style/Fill.js","webpack://country-cards-app/./node_modules/ol/style/Stroke.js","webpack://country-cards-app/./node_modules/ol/style/Style.js","webpack://country-cards-app/./node_modules/ol/style/Icon.js","webpack://country-cards-app/./node_modules/ol/style/Text.js","webpack://country-cards-app/./node_modules/ol/expr/expression.js","webpack://country-cards-app/./node_modules/ol/expr/cpu.js","webpack://country-cards-app/./node_modules/ol/render/canvas/style.js","webpack://country-cards-app/./node_modules/ol/layer/BaseVector.js","webpack://country-cards-app/./node_modules/ol/renderer/Map.js","webpack://country-cards-app/./node_modules/ol/render/Event.js","webpack://country-cards-app/./node_modules/ol/renderer/Composite.js","webpack://country-cards-app/./node_modules/ol/layer/Group.js","webpack://country-cards-app/./node_modules/ol/MapEvent.js","webpack://country-cards-app/./node_modules/ol/MapBrowserEvent.js","webpack://country-cards-app/./node_modules/ol/MapBrowserEventType.js","webpack://country-cards-app/./node_modules/ol/pointer/EventType.js","webpack://country-cards-app/./node_modules/ol/MapBrowserEventHandler.js","webpack://country-cards-app/./node_modules/ol/MapEventType.js","webpack://country-cards-app/./node_modules/ol/MapProperty.js","webpack://country-cards-app/./node_modules/ol/structs/PriorityQueue.js","webpack://country-cards-app/./node_modules/ol/TileState.js","webpack://country-cards-app/./node_modules/ol/TileQueue.js","webpack://country-cards-app/./node_modules/ol/control/Control.js","webpack://country-cards-app/./node_modules/ol/control/Attribution.js","webpack://country-cards-app/./node_modules/ol/control/Rotate.js","webpack://country-cards-app/./node_modules/ol/control/Zoom.js","webpack://country-cards-app/./node_modules/ol/control/defaults.js","webpack://country-cards-app/./node_modules/ol/interaction/Property.js","webpack://country-cards-app/./node_modules/ol/interaction/Interaction.js","webpack://country-cards-app/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://country-cards-app/./node_modules/ol/interaction/Pointer.js","webpack://country-cards-app/./node_modules/ol/events/condition.js","webpack://country-cards-app/./node_modules/ol/interaction/DragPan.js","webpack://country-cards-app/./node_modules/ol/interaction/DragRotate.js","webpack://country-cards-app/./node_modules/ol/render/Box.js","webpack://country-cards-app/./node_modules/ol/interaction/DragBox.js","webpack://country-cards-app/./node_modules/ol/interaction/DragZoom.js","webpack://country-cards-app/./node_modules/ol/events/Key.js","webpack://country-cards-app/./node_modules/ol/interaction/KeyboardPan.js","webpack://country-cards-app/./node_modules/ol/interaction/KeyboardZoom.js","webpack://country-cards-app/./node_modules/ol/Kinetic.js","webpack://country-cards-app/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://country-cards-app/./node_modules/ol/interaction/PinchRotate.js","webpack://country-cards-app/./node_modules/ol/interaction/PinchZoom.js","webpack://country-cards-app/./node_modules/ol/interaction/defaults.js","webpack://country-cards-app/./node_modules/ol/Map.js","webpack://country-cards-app/./node_modules/ol/layer/TileProperty.js","webpack://country-cards-app/./node_modules/ol/layer/BaseTile.js","webpack://country-cards-app/./node_modules/ol/renderer/Layer.js","webpack://country-cards-app/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://country-cards-app/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://country-cards-app/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://country-cards-app/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://country-cards-app/./node_modules/ol/render/canvas/ZIndexContext.js","webpack://country-cards-app/./node_modules/ol/renderer/canvas/Layer.js","webpack://country-cards-app/./node_modules/ol/Tile.js","webpack://country-cards-app/./node_modules/ol/ImageTile.js","webpack://country-cards-app/./node_modules/ol/reproj/common.js","webpack://country-cards-app/./node_modules/ol/reproj/Triangulation.js","webpack://country-cards-app/./node_modules/ol/reproj.js","webpack://country-cards-app/./node_modules/ol/reproj/Tile.js","webpack://country-cards-app/./node_modules/ol/TileRange.js","webpack://country-cards-app/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://country-cards-app/./node_modules/ol/layer/Tile.js","webpack://country-cards-app/./node_modules/ol/structs/LRUCache.js","webpack://country-cards-app/./node_modules/ol/tilecoord.js","webpack://country-cards-app/./node_modules/ol/TileCache.js","webpack://country-cards-app/./node_modules/ol/source/TileEventType.js","webpack://country-cards-app/./node_modules/ol/source/Source.js","webpack://country-cards-app/./node_modules/ol/tilegrid/TileGrid.js","webpack://country-cards-app/./node_modules/ol/tilegrid.js","webpack://country-cards-app/./node_modules/ol/source/Tile.js","webpack://country-cards-app/./node_modules/ol/tileurlfunction.js","webpack://country-cards-app/./node_modules/ol/source/UrlTile.js","webpack://country-cards-app/./node_modules/ol/source/TileImage.js","webpack://country-cards-app/./node_modules/ol/source/XYZ.js","webpack://country-cards-app/./node_modules/ol/source/OSM.js","webpack://country-cards-app/./src/components/MapComponent.vue?304e","webpack://country-cards-app/./src/views/CountryDetail.vue?c8e1"],"sourcesContent":["!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","<template>\n  <div v-if=\"loading\">Загрузка...</div>\n  <div v-else-if=\"error\">\n    {{ error }}\n  </div>\n  <div v-else class=\"country-detail__container\">\n    <h1>{{ country.name }}</h1>\n    <img\n      :src=\"flagUrl\"\n      :alt=\"country.name\"\n      class=\"country-detail__container__flag\"\n    />\n    <p>Столица: {{ country.capital }}</p>\n    <p>Население: {{ country.population }}</p>\n    <p>Площадь: {{ country.land_area }} км²</p>\n    <MapComponent\n      v-if=\"coordinates\"\n      :latitude=\"coordinates.lat\"\n      :longitude=\"coordinates.lng\"\n    />\n    <button @click=\"goBack\" class=\"country-detail__container__button\">\n      Назад к списку\n    </button>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { useCountryStore } from \"../store/countryStore\";\nimport { getTransformedFlagUrl } from \"../services/countryService\";\nimport MapComponent from \"../components/MapComponent.vue\";\n\nexport default {\n  components: {\n    MapComponent,\n  },\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const countryStore = useCountryStore();\n    const { fetchCountryById, getCoordinatesByCountryName } = countryStore;\n    const country = ref(null);\n    const coordinates = ref({});\n    const loading = ref(true);\n    const error = ref(null);\n    const flagUrl = ref(\"\");\n\n    const fetchCountryDetails = async () => {\n      try {\n        const countryId = route.params.id;\n        const response = await fetchCountryById(countryId);\n        country.value = response;\n        flagUrl.value = getTransformedFlagUrl(response.flag, 250, 150);\n        const coords = await getCoordinatesByCountryName(response.name);\n        coordinates.value = coords;\n      } catch (err) {\n        error.value = \"Ошибка загрузки страны или координат: \" + err.message;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    const goBack = () => {\n      router.push(\"/countries\");\n    };\n\n    onMounted(() => {\n      fetchCountryDetails();\n    });\n\n    return {\n      country,\n      coordinates,\n      loading,\n      error,\n      goBack,\n      flagUrl,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.country-detail {\n  &__container {\n    padding: 20px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    background-color: #f8f9fa;\n    max-width: 600px;\n    margin: 20px auto;\n    text-align: center;\n\n    h1 {\n      font-size: 2em;\n    }\n\n    &__flag {\n      width: 250px;\n      height: 150px;\n      object-fit: cover;\n    }\n\n    p {\n      margin: 5px 0;\n    }\n\n    &__button {\n      padding: 10px 20px;\n      background-color: #007bff;\n      border: none;\n      border-radius: 5px;\n      color: white;\n      cursor: pointer;\n\n      &:hover {\n        background-color: #0056b3;\n      }\n    }\n  }\n}\n\n.map-container {\n  width: 100%;\n  height: 300px;\n  margin-bottom: 1em;\n}\n</style>\n","<template>\n  <div ref=\"mapContainer\" class=\"map\"></div>\n</template>\n\n<script>\nimport { onMounted, ref } from \"vue\";\nimport \"ol/ol.css\";\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat } from \"ol/proj\";\n\nexport default {\n  props: {\n    latitude: {\n      type: Number,\n      required: true,\n    },\n    longitude: {\n      type: Number,\n      required: true,\n    },\n  },\n  setup(props) {\n    const mapContainer = ref(null);\n\n    onMounted(() => {\n      new Map({\n        target: mapContainer.value,\n        layers: [\n          new TileLayer({\n            source: new OSM(),\n          }),\n        ],\n        view: new View({\n          center: fromLonLat([props.longitude, props.latitude]),\n          zoom: 4,\n        }),\n      });\n    });\n\n    return {\n      mapContainer,\n    };\n  },\n};\n</script>\n\n<style>\n.map {\n  width: 100%;\n  height: 400px;\n  margin-bottom: 20px;\n}\n</style>\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '9.2.4';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          this.addEventListener(EventType.CHANGE, function onChange() {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          });\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(\n        typeHint === SizeType ? SizeType : NumberType,\n        encoded,\n      );\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 2) {\n    type |= SizeType;\n  } else if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          ),\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs,\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs,\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs, usesGeometryType),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType,\n  ),\n  [Ops.Coalesce]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs,\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs,\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs,\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 2\n        ? NumberArrayType | SizeType\n        : parsedArgs.length === 3 || parsedArgs.length === 4\n          ? NumberArrayType | ColorType\n          : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(1, 4),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n  [Ops.ToString]: createParser(\n    StringType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type,\n      )} but the following type was expected: ${typeName(typeHint)}`,\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`,\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`,\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType,\n      )} for the interpolate operation` +\n        `, got ${typeName(inputType)} instead`,\n    );\n  }\n  inputType &= expectedInputType;\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`,\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`,\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`,\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`,\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context, typeHint);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context, typeHint);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`,\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType,\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type,\n      )} instead`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`,\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type,\n        )} instead`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint,\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded,\n          )}`,\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded,\n        )}`,\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context,\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<import('../Feature').FeatureLike>|import(\"../source/VectorTile.js\").default<import('../Feature').FeatureLike>} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<import('../Feature').FeatureLike>|import(\"../source/VectorTile.js\").default<import('../Feature').FeatureLike>} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map),\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {toPromise} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState)),\n      ),\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false,\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default>|null} declutter Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this,\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection,\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ,\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent,\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent,\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]],\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload(),\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey],\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        ),\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback,\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent',\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark,\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","import { render } from \"./MapComponent.vue?vue&type=template&id=45afb259\"\nimport script from \"./MapComponent.vue?vue&type=script&lang=js\"\nexport * from \"./MapComponent.vue?vue&type=script&lang=js\"\n\nimport \"./MapComponent.vue?vue&type=style&index=0&id=45afb259&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./CountryDetail.vue?vue&type=template&id=575fe123\"\nimport script from \"./CountryDetail.vue?vue&type=script&lang=js\"\nexport * from \"./CountryDetail.vue?vue&type=script&lang=js\"\n\nimport \"./CountryDetail.vue?vue&type=style&index=0&id=575fe123&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["t","i","module","exports","this","r","e","a","h","n","o","s","l","Math","log","f","exp","u","sqrt","m","max","floor","c","min","p","d","x","length","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","height","pop","push","prototype","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","key","class","$setup","loading","_createElementBlock","_hoisted_1","error","_hoisted_2","_toDisplayString","_hoisted_3","_createElementVNode","country","name","src","flagUrl","alt","_hoisted_4","capital","population","land_area","coordinates","_createBlock","_component_MapComponent","latitude","lat","longitude","lng","_createCommentVNode","onClick","_cache","args","goBack","ref","BaseEvent","constructor","type","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","PROPERTYCHANGE","Disposable","disposed","dispose","disposeInternal","ascending","b","linearFindNearest","arr","direction","candidate","extend","extension","Array","isArray","equals","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","call","arguments","arrayEquals","toPromise","getter","promiseGetter","value","err","Promise","reject","resolve","object","property","isEmpty","Target","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","listen","thisArg","once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","Observable","EventTarget","on","onInternal","onceInternal","un","unInternal","revision_","changed","EventType","getRevision","len","ol_key","unByKey","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","BaseObject","values","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","ADD","REMOVE","Property","LENGTH","CollectionEvent","element","Collection","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","forEach","getArray","item","insertAt","elem","CollectionEventType","removeAt","prev","setAt","except","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","assert","assertion","errorMessage","clamp","squaredSegmentDistance","y","x1","y1","x2","y2","dx","dy","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","abs","absValue","tmp","j","coef","k","toRadians","angleInDegrees","PI","modulo","lerp","toFixed","decimals","factor","round","BaseLayer","background_","background","properties","LayerProperty","opacity","visible","zIndex","maxResolution","Infinity","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","state","layer","getZIndex","getOpacity","getVisible","extent","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","METERS_PER_UNIT","Projection","code_","code","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","resolution","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","EPSG4326Projection","cache","replace","add","projection","transforms","destination","transformFn","sourceCode","destinationCode","transform","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","createOrUpdate","clone","closestSquaredDistanceXY","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","rotation","size","x0","y0","x3","y3","getRotatedViewport","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","stops","width","wrapX","projectionExtent","worldWidth","worldsAway","wrapAndSliceX","multiWorld","isFinite","delta","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","scale","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","levels","info","warn","none","level","console","showCoordinateWarning","disableCoordinateWarning","disable","hide","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","fromLonLat","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","getTransformFunc","getTransform","transformExtent","userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","easeIn","easeOut","inAndOut","linear","create","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","determinant","matrixPrecision","toString","transformString","map","join","transform2D","anchor","anchorX","anchorY","deltaX","deltaY","translate","tmpTransform","createTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","simplify","getType","intersectsExtent","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","setLayout","nesting","getLayoutForStride","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","snap","quantize","quantizeArray","simplifiedEnds","inflateCoordinates","inflateCoordinatesArray","linearRing","twiceArea","linearRings","LinearRing","maxDelta_","maxDeltaRevision_","linearRingArea","Point","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLinearRing","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","reverse","reverseCoordinates","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","padding_","padding","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","getState","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","geometry","polygonFromExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","position","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","setTimeout","smoothExtentConstraint","constrainOnlyCenter","centerNone","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","degrees","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","rotationNone","coordinatesEqual","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","getData","isVisible","view","frameState","getMapInternal","layerState","getView","layerStatesArray","getLayerGroup","find","layerExtent","inView","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","RenderEventType","renderEvent","some","arrayLayerState","createRenderer","hasRenderer","IDLE","LOADING","LOADED","EMPTY","hasArea","toSize","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","getSize","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","ready","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","rgb","_xyz","white","g","arg","_u","_v","xn","yn","zn","vn","luv","yr","lchuv","hr","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","baseHues","parse","cstr","space","parts","alpha","toLowerCase","names","base","isShort","parseInt","exec","dims","trim","split","shift","parseFloat","endsWith","test","match","hsl","t1","t2","t3","rgba","color","raw","Number","parsed","asString","MAX_CACHE_SIZE","cacheSize","withAlpha","rgbaToLcha","lchaToRgba","fromString","parseRgba","normalize","asArray","isStringColor","_","ua","navigator","userAgent","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","createCanvasContext2D","canvasPool","settings","canvas","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","oldChildren","childNodes","oldChild","newChild","insertBefore","appendChild","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","then","catch","handleLoad","unlisten","handleError","decodeFallback","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","crossOrigin","getCacheKey","getPattern","pattern","update","ImageState","createPattern","setSize","maxCacheSize","colorString","shared","taintedTestContext","IconImage","imageState","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","fillRect","getSrc","HTMLImageElement","ctx","globalCompositeOperation","fillStyle","onChange","cacheKey","iconImageCache","asColorLike","asCanvasPattern","iconCache","canvasPattern","patternCanvasContext","getIconImage","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","style","lineHeight","weight","variant","families","family","defaultFillStyle","defaultLineCap","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","retries","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","measureElement","measureText","RegularShape","canvases_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius2_","radius2","angle_","stroke_","stroke","renderOptions_","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","maxr","bevelAdd","aa","bb","dd","ee","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","closePath","CircleStyle","setRadius","Fill","patternImage_","setColor","patternImage","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getGeometry","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","feature","toFunction","styleFunction","styles","defaultStyles","createDefaultStyle","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","DEFAULT_FILL_COLOR","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","namedType","includesType","broad","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","newParsingContext","variables","Set","featureId","geometryType","getTypeFromHint","typeHint","encoded","parseCallExpression","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","ToString","parsers","createParser","withArgsCount","withGetArgs","firstArg","withVarArgs","withNoArgs","usesFeatureId","parseArgsOfType","usesGeometryType","narrowArgsType","parsedArgs","outputType","withEvenArgs","parseMatchArgs","parseInterpolateArgs","withOddArgs","parseCaseArgs","parseInArgs","parsePaletteArgs","varName","initialValue","operation","minArgs","maxArgs","argCount","plural","range","argType","expression","gotType","expectedType","sameType","JSON","stringify","argsCount","inputType","fallback","expectedInputType","interpolationType","interpolation","stop","condition","haystack","needleType","needle","colors","parsedColors","returnType","argValidators","actualType","parser","computeGeometryType","substring","getGeometries","newEvaluationContext","buildExpression","actual","compileExpression","colorValue","compileAssertionExpression","compileAccessorExpression","concat","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","compileInterpolateExpression","compileConvertExpression","nameExpression","op","left","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","always","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","id","getId","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","empty","prefix","evaluateColor","patternEvaluator","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","optionalDeclutterMode","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","optionalColorLike","optionalString","optionalNumberArray","optionalNumber","optionalSize","icon","pointsName","radiusName","requireNumber","shape","evaluateRadius","circle","Circle","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","requireColorLike","requireNumberArray","requireSize","requireSizeLike","RENDER_ORDER","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","RBush","setRenderOrder","renderOrder","styleLike","toStyleLike","toStyleFunction","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","hasFeature","getMap","scheduleExpireIconCache","postRenderFunctions","expireIconCache","RenderEvent","inversePixelTransform","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","display","renderedLayerStates","previousElement","layerIndex","sourceState","GroupEvent","LAYERS","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MOVESTART","MOVEEND","LOADSTART","LOADEND","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","getTilesLoading","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","updateElement_","attribution","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","contains","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attributionOptions","ACTIVE","Interaction","setActive","getActive","InteractionProperty","mapBrowserEvent","active","pan","zoomByDelta","DoubleClickZoom","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","mouseActionButton","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","begin","distance","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","DragRotate","lastAngle_","RenderBox","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","pixels","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","UP","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","KeyboardZoom","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlays","overlayIdIndex_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","layerGroup","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewport","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","cont","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","time","unobserve","ShadowRoot","host","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","moveStart","equalsExtent","idle","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","offsetHeight","getClientRects","oldSize","PRELOAD","USE_INTERIM_TILES_ON_ERROR","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","_typeof","Symbol","iterator","toPrimitive","TypeError","toPropertyKey","_defineProperty","enumerable","configurable","ZIndexContext","instructions_","context_","Proxy","pushMethodArgs_","pushFunction","draw","instructionsAtIndex","instructionAtIndex","pixelContext","createPixelContext","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","pixelContext_","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","save","beginPath","moveTo","clip","prepareContainer","canvasTransform","toTransformString","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","Tile","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","ImageTile","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","isNotFinite","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","restore","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","triangulation","sources","gutter","renderEdges","drawSingle","clipExtent","imageSmoothingEnabled","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","clipExtent_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceExtents","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","TileRange","containsTileRange","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileState","getTile","tileSource","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","tileSize","getGutterForProjection","viewResolution","viewCenter","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","getInterpolate","clips","clipZs","currentClip","zs","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","globalAlpha","postRenderFunction","expireCache","tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","TileLayer","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","fromKey","hash","withinExtentAndZ","getFullTileRange","TileCache","pruneExceptNewestZ","TILELOADSTART","TILELOADEND","TILELOADERROR","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","attributionLike","tmpTileCoord","DECIMALS","TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordResolution","opt_direction","fullTileRanges","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileGrid","scaleSize","getTileCoordForTileUrlFunction","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","expandUrl","url","urls","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","XYZ","ATTRIBUTION","OSM","props","required","setup","mapContainer","onMounted","__exports__","components","MapComponent","route","useRoute","router","useRouter","countryStore","useCountryStore","fetchCountryById","getCoordinatesByCountryName","fetchCountryDetails","async","countryId","params","response","getTransformedFlagUrl","flag","message"],"sourceRoot":""}